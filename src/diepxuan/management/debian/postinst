#!/usr/bin/env bash
#!/bin/bash
#!/bin/sh
# postinst script
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
configure)
    systemctl daemon-reload
    systemctl enable ductnd.service >/dev/null 2>&1 || true
    systemctl restart ductnd.service >/dev/null 2>&1 || true

    CONFIG_FILE="/etc/lxc/default.conf"
    HOOK_LINE="lxc.hook.create = /var/lib/lxc/hooks/default-hook.sh"

    # Kiểm tra file có tồn tại không
    if [[ -f "$CONFIG_FILE" ]]; then
        # Kiểm tra xem dòng hook đã có trong file chưa
        if grep -Fxq "$HOOK_LINE" "$CONFIG_FILE"; then
            echo "✔ Hook đã tồn tại trong $CONFIG_FILE"
        else
            echo "$HOOK_LINE" | sudo tee -a "$CONFIG_FILE" >/dev/null
            echo "✔ Đã thêm hook vào $CONFIG_FILE"
        fi
    fi
    ;;

abort-upgrade | abort-remove | abort-deconfigure) ;;

*)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
